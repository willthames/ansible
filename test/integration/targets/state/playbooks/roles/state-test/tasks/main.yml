- name: ensure independent state_file is {{ state }}
  state_file:
    path: "{{ tempdir }}/state_file"
    content: 123
    resource_id: "my_state_file"
  register: independent_state_file

- name: ensure dependent state_file is {{ state }}
  state_file:
    path: "{{ tempdir }}/state_file_2"
    content: "{{ ansible_state.state_file.my_state_file.inode }}"
    resource_id: "my_state_file_2"
  register: dependent_state_file

- name: lookup file
  stat:
    path: "{{ tempdir }}/state_file_2"
    depends_on: "{{ ansible_state.state_file.my_state_file_2 }}"
    resource_id: "stat_file_2"
  register: stat_file_2

- name: assert that file 2 has correct state
  assert:
    that:
      - (state == 'present')|ternary(stat_file_2.stat.exists, not stat_file_2.stat.exists)
  ignore_errors: yes

  # FIXME: This should work but needs setting up
  # Question whether depends_on is ever likely to need with_items - i.e. is it a task argument or task attribute?
  # Task argument is easier though. Either way, depends_on needs to take lists, and needs an always_after key
  # for tests that happen after an action.
  #depends_on:
  #  - resource_id: "{{ ansible_state.stat.stat_file_2 }}"
  #    always_after: yes

# FIXME: add some with_items resources
